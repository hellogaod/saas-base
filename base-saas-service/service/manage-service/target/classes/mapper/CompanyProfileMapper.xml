<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.base.saas.manager.mapper.CompanyProfileMapper" >
    <resultMap id="BaseResultMap" type="com.base.saas.manager.model.CompanyProfile" >
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="company_code" property="companyCode" jdbcType="VARCHAR" />
        <result column="delete_flag" property="deleteFlag" jdbcType="SMALLINT" />
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.base.saas.manager.model.CompanyProfile" extends="BaseResultMap" >
        <result column="content" property="content" jdbcType="LONGVARCHAR" />
    </resultMap>
    <sql id="Base_Column_List" >
        id, company_code, delete_flag
    </sql>
    <sql id="Blob_Column_List" >
        content
    </sql>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from company_profile
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from company_profile
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.base.saas.manager.model.CompanyProfile" >
        insert into company_profile (id, company_code, delete_flag,
        content)
        values (#{id,jdbcType=VARCHAR}, #{companyCode,jdbcType=VARCHAR}, #{deleteFlag,jdbcType=SMALLINT},
        #{content,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.base.saas.manager.model.CompanyProfile" >
        insert into company_profile
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="companyCode != null" >
                company_code,
            </if>
            <if test="deleteFlag != null" >
                delete_flag,
            </if>
            <if test="content != null" >
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="companyCode != null" >
                #{companyCode,jdbcType=VARCHAR},
            </if>
            <if test="deleteFlag != null" >
                #{deleteFlag,jdbcType=SMALLINT},
            </if>
            <if test="content != null" >
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.base.saas.manager.model.CompanyProfile" >
        update company_profile
        <set >
            <if test="companyCode != null" >
                company_code = #{companyCode,jdbcType=VARCHAR},
            </if>
            <if test="deleteFlag != null" >
                delete_flag = #{deleteFlag,jdbcType=SMALLINT},
            </if>
            <if test="content != null" >
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.base.saas.manager.model.CompanyProfile" >
        update company_profile
        set company_code = #{companyCode,jdbcType=VARCHAR},
        delete_flag = #{deleteFlag,jdbcType=SMALLINT},
        content = #{content,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>
<!--    <update id="updateByPrimaryKey" parameterType="com.base.saas.system.model.CompanyProfile" >-->
<!--        update company_profile-->
<!--        set company_code = #{companyCode,jdbcType=VARCHAR},-->
<!--        delete_flag = #{deleteFlag,jdbcType=SMALLINT}-->
<!--        where id = #{id,jdbcType=VARCHAR}-->
<!--    </update>-->

    <update id="update" parameterType="com.base.saas.manager.model.CompanyProfile">
        update company_profile
        set content = #{content},
        delete_flag = #{deleteFlag}
        where company_code = #{companyCode} and delete_flag = 0
    </update>

    <select id="getInfo" parameterType="java.lang.String" resultType="com.base.saas.manager.model.CompanyProfile">
        select company_code AS companyCode,content
        from company_profile
        where company_code = #{companyCode} and delete_flag = 0
    </select>
</mapper>